{
  "actions" : [
    {
      "type" : "@flow.set-variable",
      "parameters" : {
        "value" : {
          "value" : "用户TOKEN"
        },
        "name" : {
          "value" : "token"
        }
      }
    },
    {
      "type" : "@editor.get-text",
      "parameters" : {
        "location" : 0,
        "fallback" : 1,
        "filename" : {
          "value" : "$",
          "tokens" : [
            {
              "location" : 0,
              "value" : "@editor.file-name"
            }
          ]
        }
      }
    },
    {
      "type" : "@flow.set-variable",
      "parameters" : {
        "value" : {
          "value" : "$",
          "tokens" : [
            {
              "location" : 0,
              "value" : "@input"
            }
          ]
        },
        "name" : {
          "value" : "content"
        }
      }
    },
    {
      "type" : "@flow.set-variable",
      "parameters" : {
        "value" : {
          "value" : "API地址"
        },
        "name" : {
          "value" : "api"
        }
      }
    },
    {
      "type" : "@flow.set-variable",
      "parameters" : {
        "value" : {
          "value" : "你的用户ID"
        },
        "name" : {
          "value" : "userId"
        }
      }
    },
    {
      "type" : "@util.request",
      "parameters" : {
        "body" : {
          "value" : ""
        },
        "url" : {
          "value" : "$\/ispeak\/tag\/list?userId=$",
          "tokens" : [
            {
              "location" : 25,
              "value" : "userId"
            },
            {
              "location" : 0,
              "value" : "api"
            }
          ]
        },
        "method" : 0,
        "headers" : {
          "value" : "{\n  \"Content-Type\": \"application\/json\"\n}"
        }
      }
    },
    {
      "type" : "@flow.javascript",
      "parameters" : {
        "script" : {
          "value" : "\/\/ Get input\nconst text = $actions.inputValue;\n\/\/ Resolve with output\nconst textJson = JSON.parse(text);\nconst selectData = []\nconst selectMap = {}\ntextJson.data.forEach(item=>{\n  selectData.push(item.name)\n  selectMap[item.name] = item._id\n})\n$actions.setVar(\"selectMap\",selectMap)\n$actions.resolve(selectData.join(\"\\n\"));\n\n\/\/ Exception handling:\n\/\/  $actions.reject(\"Error\");\n\/\/  $actions.finish();"
        }
      }
    },
    {
      "type" : "@ui.menu",
      "parameters" : {
        "prompt" : {
          "value" : ""
        },
        "selectAllByDefault" : false,
        "multiValue" : false,
        "lines" : {
          "value" : "$",
          "tokens" : [
            {
              "location" : 0,
              "value" : "@input"
            }
          ]
        }
      }
    },
    {
      "type" : "@flow.set-variable",
      "parameters" : {
        "value" : {
          "value" : "$",
          "tokens" : [
            {
              "location" : 0,
              "value" : "@input"
            }
          ]
        },
        "name" : {
          "value" : "selectTag"
        }
      }
    },
    {
      "type" : "@flow.javascript",
      "parameters" : {
        "script" : {
          "value" : "\/\/ Get input\nconst text = $actions.inputValue;\nconst selectMap = $actions.getVar(\"selectMap\")\n$actions.setVar(\"tag\",selectMap[text])\n\/\/ Resolve with output\n$actions.resolve(selectMap[text]);\n\n\/\/ Exception handling:\n\/\/  $actions.reject(\"Error\");\n\/\/  $actions.finish();"
        }
      }
    },
    {
      "type" : "@ui.menu",
      "parameters" : {
        "prompt" : {
          "value" : "选择可见类型"
        },
        "selectAllByDefault" : false,
        "multiValue" : false,
        "lines" : {
          "value" : "公开\n登录可见\n仅自己可见"
        }
      }
    },
    {
      "type" : "@flow.set-variable",
      "parameters" : {
        "value" : {
          "value" : "$",
          "tokens" : [
            {
              "location" : 0,
              "value" : "@input"
            }
          ]
        },
        "name" : {
          "value" : "selectType"
        }
      }
    },
    {
      "type" : "@flow.javascript",
      "parameters" : {
        "script" : {
          "value" : "\/\/ Get input\nconst text = $actions.inputValue;\n\nconst typeMap = {\n  \"公开\":\"0\",\n  \"登录可见\":\"1\",\n  \"仅自己可见\":\"2\",\n}\n$actions.setVar(\"type\",typeMap[text])\n\/\/ Resolve with output\n$actions.resolve(typeMap[text]);\n\n\/\/ Exception handling:\n\/\/  $actions.reject(\"Error\");\n\/\/  $actions.finish();"
        }
      }
    },
    {
      "type" : "@ui.render-text",
      "parameters" : {
        "title" : {
          "value" : ""
        },
        "fullScreen" : false,
        "text" : {
          "value" : "标签：$\n可见度：$\n内容：$",
          "tokens" : [
            {
              "location" : 14,
              "value" : "content"
            },
            {
              "location" : 9,
              "value" : "selectType"
            },
            {
              "location" : 3,
              "value" : "selectTag"
            }
          ]
        }
      }
    },
    {
      "type" : "@ui.confirm",
      "parameters" : {
        "text" : {
          "value" : "是否确认"
        }
      }
    },
    {
      "type" : "@flow.javascript",
      "parameters" : {
        "script" : {
          "value" : "const api = $actions.getVar(\"api\")\nconst tag = $actions.getVar(\"tag\")\nconst content = $actions.getVar(\"content\")\nconst type = $actions.getVar(\"type\")\nconst token = $actions.getVar(\"token\")\nconst userId = $actions.getVar(\"userId\")\nconst obj = {\n    userId:userId,\n    type:type,\n    tag:tag,\n    content:content,\n    token:token\n  }\n  $actions.resolve(JSON.stringify(obj))"
        }
      }
    },
    {
      "type" : "@util.request",
      "parameters" : {
        "body" : {
          "value" : "$",
          "tokens" : [
            {
              "location" : 0,
              "value" : "@input"
            }
          ]
        },
        "url" : {
          "value" : "$\/ispeak\/addByToken",
          "tokens" : [
            {
              "location" : 0,
              "value" : "api"
            }
          ]
        },
        "method" : 1,
        "headers" : {
          "value" : "{\n  \"Content-Type\": \"application\/json\"\n}"
        }
      }
    },
    {
      "type" : "@ui.toast",
      "parameters" : {
        "style" : 0,
        "waitUntilDone" : false,
        "title" : {
          "value" : "$",
          "tokens" : [
            {
              "location" : 0,
              "value" : "@input"
            }
          ]
        }
      }
    }
  ],
  "buildVersion" : 1,
  "name" : "将文本发送到speak",
  "clientMinVersion" : 1,
  "summary" : "",
  "icon" : {
    "glyph" : "wand.and.stars",
    "color" : "#FE824B"
  },
  "clientVersion" : 722
}